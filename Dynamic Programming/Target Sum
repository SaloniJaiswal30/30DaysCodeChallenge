#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int S) {
        int sum=0;
        int n=nums.size();
        int count=0;
        for(int i=0;i<n;i++){
            sum=sum+nums[i];
            if(nums[i]==0)
                count++;
        }
        if(S>sum)
            return 0;
        if((S+sum)%2!=0)
            return 0;
        int s1=abs(sum-S)/2;
        int a[n+1][s1+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<s1+1;j++){
                if(i==0)
                    a[i][j]=0;
                if(j==0)
                    a[i][j]=1;
            }
        }
        for(int i=1;i<n+1;i++){
            for(int j=1;j<s1+1;j++){
                if(nums[i-1]==0)
                    a[i][j]=a[i-1][j];
                else if(nums[i-1]<=j){
                    a[i][j]=a[i-1][j-nums[i-1]] + a[i-1][j];
                }
                else
                    a[i][j]=a[i-1][j];
            }
        }
        return pow(2,count)*a[n][s1];
    }
};

int main(){
    int t;
    cin>>t;
    while(t--){
        int N,S;
        cin>>N;
        cin>>S;
        vector<int> v1;
        for(int i = 0;i< N;i++){
            int tmp;
            cin>>tmp;
            v1.push_back(tmp);
         }
        
        Solution ob;
        cout<<ob.findTargetSumWays(v1,S);
    }
    return 0;
} 


/*
--input--
1
5 3
1 1 1 1 1
--output--
5
*/
