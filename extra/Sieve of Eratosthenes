/*
https://practice.geeksforgeeks.org/problems/sieve-of-eratosthenes5242/1#
*/

#include<bits/stdc++.h> 
using namespace std; 

class Solution
{
public:
    vector<int> sieveOfEratosthenes(int n)
    {
        bool a[n+3];
        vector<int> v;
        memset(a,true,sizeof(a));
        for(int i=2;i<=sqrt(n);i++){
            if(a[i]){
                //i=i+i;
                for(int j=i*2;j<=n;j+=i){
                    a[j]=false;
                }
            }
        }
        for(int i=2;i<=n;i++){
            if(a[i])
                v.push_back(i);        }
        return v;
    }
};

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int N;
        cin>>N;
        Solution ob;
        vector<int> primes  = ob.sieveOfEratosthenes(N);
        for(auto prime : primes) {
            cout<< prime <<" ";
        }
        cout<<endl;
    }
    return 0;
}  


/*
--input--
10
--output--
2 3 5 7 
*/