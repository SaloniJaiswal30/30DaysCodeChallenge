/*
Question:
Given two binary trees, return whether or not the two trees are identical. Note: identical meaning they exhibit the same structure and the same values at each node. Ex: Given the following trees...

        2
       / \
      1   3
    2
   / \
  1   3

return true.

Ex: Given the following trees...

        1
         \
          9
           \
           18
    1
   /
  9
   \
    18

return false.

Ex: Given the following trees...

        2
       / \
      3   1
    2
   / \
  1   3

return false.

https://leetcode.com/problems/same-tree/
*/

class Solution {
public:
    bool t=true;
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL && q!=NULL){
            t=false;
            return false;
        }
        if(p!=NULL && q==NULL){
            t=false;
            return false;
        }
        if(p==NULL && q==NULL){
            return true;
        }
        if(p->val!=q->val){
            t=false;
            return false; 
        }
        isSameTree(p->left,q->left);
        isSameTree(p->right,q->right);
        return t;
    }
};


/*
--input--
[1,2,3]
[1,2,3]

--output--
true
*/