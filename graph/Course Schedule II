
//Link:https://leetcode.com/problems/course-schedule-ii/

class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,vector<int>> mp;
        vector<int> indegree(numCourses,0);
        vector<int> result;
        queue<int> q;
        
        for(int i=0;i<prerequisites.size();i++){
            //cout<<prerequisites[i][1]<<"\n";
            indegree[prerequisites[i][1]]++;
            mp[prerequisites[i][0]].push_back(prerequisites[i][1]);
        }
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0)
                q.push(i);
        }
        while(!q.empty()){
            int tmp=q.front();
            q.pop();
            result.push_back(tmp);
            for(int i=0;i<mp[tmp].size();i++){
                indegree[mp[tmp][i]]--;
                if(indegree[mp[tmp][i]]==0)
                    q.push(mp[tmp][i]);
            }
        }
        if(result.size()!=numCourses)
        {
            result.clear();
            return result;
        }
        reverse(result.begin(),result.end());
        return result;
    }
};

/*
--input--
4
[[1,0],[2,0],[3,1],[3,2]]

--output--
[0,2,1,3]

*/