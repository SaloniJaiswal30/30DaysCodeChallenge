/*
Question:
This question is asked by Facebook. Given a linked list and a value n, remove the nth to last node and return the resulting list.

Ex: Given the following linked lists...

1->2->3->null, n = 1, return 1->2->null
1->2->3->null, n = 2, return 1->3->null
1->2->3->null, n = 3, return 2->3->null

https://leetcode.com/problems/remove-nth-node-from-end-of-list/
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(n==0)
            return head;
        
        ListNode* tmp=head;
        int size=0;
        while(tmp!=NULL){
            size++;
            tmp=tmp->next;
        }
        tmp=head;
        size=size-n-1;
        if(size==-1)
        {
            return head->next;
        }
        while(tmp!=NULL){
            if(size==0){
                tmp->next=tmp->next->next;
                break;
            }
            tmp=tmp->next;
            size--;
        }
        return head;
    }
};


/*
--input--
[1,2,3,4,5]
2

--output--
[1,2,3,5]
*/