/*
Question:
This question is asked by Facebook. Given a string and the ability to delete at most one character, return whether or not it can form a palindrome.
Note: a palindrome is a sequence of characters that reads the same forwards and backwards.

Ex: Given the following strings...

"abcba", return true
"foobof", return true (remove the first 'o', the second 'o', or 'b')
"abccab", return false

https://leetcode.com/problems/valid-palindrome-ii/
*/

class Solution {
public:
    bool validPalindrome(string s) {
        int count1=1;
        int count2=1;
        int i=0;
        int j=s.length()-1;
        while(i<=j){
            if(s[i]!=s[j]){
                break;
            }
            i++;
            j--;
        }
       
        int m=i;
        int n=j;
        i=i+1;
        while(i<=j){
            if(s[i]!=s[j]){
                 count1=0;
                break;
            }
            i++;
            j--;
            
        }
        i=m;
        j=n-1;
        while(i<=j){
            if(s[i]!=s[j]){
                count2=0;
                break;
            }
            i++;
            j--;
            
        }
        if(count1 || count2)
            return true ;
        else
            return false;
    }
};


/*
--input--
"abca"
--output--
true
*/