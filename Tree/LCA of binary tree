//#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

class Node{
    public:
    int data;
    Node *right;
    Node *left;
    Node(int d){
        data=d;
        right=NULL;
        left=NULL;
    }
};
Node* LCA(Node *root, int n1, int n2)
{
    if(root==NULL)
        return NULL;
    else if(root->data==n1 ||root->data==n2)
            return root;
    Node *m1=LCA(root->left,n1,n2);
    Node *m2=LCA(root->right,n1,n2);
    if(m1!=NULL && m2!=NULL){
        return root;
    }
    else if(m1!=NULL && m2==NULL){
        return m1;
    }
     else{
        return m2;
     }
}


int main() {
	Node *root =new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
    root->right->left=new Node(6);
    root->right->right=new Node(7);
    root->left->left->left=new Node(8);
    root->left->left->right=new Node(9);
    cout<<"LCA:"<<LCA(root,5,9)->data;
    
    return 0;
}
/*
--input--
           1
       2       3
    4    5  6    7
 8    9
       
--output--

LCA : 2

*/
Â© 2021 GitHub, Inc.
