/*
Question:
This question is asked by Microsoft. Given a linked list, containing unique numbers, return whether or not it has a cycle.
Note: a cycle is a circular arrangement (i.e. one node points back to a previous node)

Ex: Given the following linked lists...

1->2->3->1 -> true (3 points back to 1)
1->2->3 -> false
1->1 true (1 points to itself)

https://leetcode.com/problems/linked-list-cycle/
*/

class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *fast=head; 
        ListNode *slow=head;
        while(fast!=NULL && fast->next!=NULL){
            fast=fast->next->next;
            slow=slow->next;
            if(fast==slow)
                return true;
            
        }
        return false;
    }
};


/*
--input--
[3,2,0,-4]
1

--output--
true
*/