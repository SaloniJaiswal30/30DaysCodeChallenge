/*
Question:
This question is asked by Apple. Given a list of positive numbers without duplicates and a target number, find all unique combinations
of the numbers that sum to the target. Note: You may use the same number more than once.

Ex: Given the following numbers and targetâ€¦

numbers = [2,4,6,3], target = 6,
return [
    [2,2,2],
    [2,4],
    [3,3],
    [6]
]

link:https://leetcode.com/problems/combination-sum/
*/

class Solution {
public:
    void combine(vector<int> candidates, int target,vector<vector<int>> &op,vector<int> &tmp,int start){
        if(target<0)
            return;
        if(target==0){
            op.push_back(tmp);
            return;
        }
        for(int j=start;j<candidates.size();j++){
            tmp.push_back(candidates[j]);
            combine(candidates,target-candidates[j],op,tmp,j);
            tmp.pop_back();
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> op;
        vector<int> tmp;
        int s=candidates.size();
        combine(candidates,target,op,tmp,0);
          
        return op;
    }
};
/*
--input--
[2,3,6,7]
7

--output--
[[2,2,3],[7]]

*/