/*
Given an input integer n, count natural numbers in range [1, n] whose all permutations are greater than or equal to the number itself.

Inputs:

n:  upper bound.

Outputs:

Count of natural numbers in range [1, n] whose all permutations are greater than the number itself.

CONSTRAINTS
0 ≤ n ≤ 108

EXAMPLES

EXAMPLE 1:
Input:21
Output:18
Explanation:
1, 2, 3, 4, 5, 6, 7, 8, 9 ,11, 12, 13, 14, 15, 16, 17, 18, 19
are the numbers whose all permutation is greater than or equal
to the number itself.

10 -> Permutation 01 is less than 10 therefore not included.

20 -> Permutation 02 is less than 20 therefore not included.

21 -> Permutation 12 is less than 21 therefore not included.

So, output 18.
*/

#include<bits/stdc++.h>
using namespace std;


int CountNaturalNumber(int n)
{
    int result=0;
    stack<int> s;
    for(int i=1;i<=9;i++){
       if(i<=n){
           s.push(i);
           result++;
       } 
       while(!s.empty()){
           int top_ele=s.top();
           s.pop();
           for(int j=top_ele%10;j<=9;j++){
               if((top_ele*10+j)<=n){
                   s.push(top_ele*10+j);
                   result++;
               }
           }
       }
    }
    return result;
}
int main(){
    int n;
    cin>>n;
    cout<< CountNaturalNumber(n);
    return 0;
}

/*
--input--
21
--output--
18
*/
