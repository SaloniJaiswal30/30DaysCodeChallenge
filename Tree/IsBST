//#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

class Node{
    public:
    int data;
    Node *right;
    Node *left;
    Node(int d){
        data=d;
        right=NULL;
        left=NULL;
    }
};
bool result=true;
int isBST1(Node *root, int mini,int maxi){
    if(root==NULL)
        return 0;
    if(root->data<mini ||root->data>maxi){
        result=false;
    }
    isBST1(root->left,mini,root->data-1);
    isBST1(root->right,root->data-1,maxi);
}
bool isBST(Node* root) {
    // Your code here
    result=true;
    isBST1(root,INT_MIN,INT_MAX);
    return result;
}

int main() {
	Node *root =new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
    root->right->left=new Node(6);
    root->right->right=new Node(7);
    root->left->left->left=new Node(8);
    root->left->left->right=new Node(9);
    cout<<"Given tree is binary search tree:"<<isBST(root);
    
    return 0;
}

/*
--input--
       1
    2     3
  4   5 6   7
8   9
--output--
Given tree is binary search tree:0
*/
