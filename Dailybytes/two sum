/*
This question is asked by Google. Given an array of integers, return whether or not two numbers sum to a given target, k.
Note: you may not sum a number with itself.

Ex: Given the following...

[1, 3, 8, 2], k = 10, return true (8 + 2)
[3, 9, 13, 7], k = 8, return false
[4, 2, 6, 5, 2], k = 4, return true (2 + 2)

https://leetcode.com/problems/two-sum/
*/

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> v1;
        map<int,int> m1;
        for (int i=0;i<nums.size();i++){
            m1[nums[i]]=i;
        }
        for (int i=0;i<nums.size();i++){
            if(m1.find(target-nums[i])!=m1.end() && i!=m1[target-nums[i]]){
                v1.push_back(i);
                v1.push_back(m1[target-nums[i]]);
                return v1;
            }
                
        }
        return v1;
    }
};


/*
--input--
[3,2,4]
6
--output--
[1,2]
*/