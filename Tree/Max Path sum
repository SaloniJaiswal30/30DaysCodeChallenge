//#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

class Node{
    public:
    int data;
    Node *right;
    Node *left;
    Node(int d){
        data=d;
        right=NULL;
        left=NULL;
    }
};
int res=INT_MIN;
int maxPathSum1(Node* root,int &res)
{ 
    if(root==NULL)
        return 0;
    int l=maxPathSum1(root->left, res);
    int r=maxPathSum1(root->right, res);
    int maxi=max(max(l,r)+root->data,root->data);
    int max_top=max(maxi, l+r+root->data);
    res=max(res,max_top);
    return maxi;
    
}
int maxPathSum(Node* root){
    int res=INT_MIN;
    maxPathSum1(root,res);
    return res;
}


int main() {
	Node *root =new Node(10);
    root->left=new Node(5);
    root->right=new Node(15);
    root->left->left=new Node(2);
    root->left->right=new Node(4);
    root->right->left=new Node(11);
    root->right->right=new Node(16);
    root->left->left->left=new Node(1);
    root->left->left->right=new Node(3);
    cout<<"Maximum path sum:"<<maxPathSum(root);
    
    return 0;
}

/*
--input--
           10
       5       15
    2    4  12    16
 1    3
       
--output--
Maximum path sum:51
*/
