#include<bits/stdc++.h>
const int mod=1e9+7;
using namespace std;

void lps(int, string);

int main()
{
    int t,n,k,x,y;
    
    cin>>t;
    while(t--)
    {
        cin>>x;          // Take size of both the strings as input
        string s1,s2;
        cin>>s1;        // Take both the string as input
        
        lps(x, s1);
    }
    return 0;
}

void lps(int x, string s1){
    string s2=s1;
    reverse(s1.begin(),s1.end());
    int a[x+1][x+1];
    for(int i=0;i<x+1;i++){
        for(int j=0;j<x+1;j++){
            if(i==0 || j==0)
                a[i][j]=0;
        }
    }
    for(int i=1;i<x+1;i++){
        for(int j=1;j<x+1;j++){
            if(s1[i-1]==s2[j-1])
                a[i][j]=1+a[i-1][j-1];
            else
                a[i][j]=max(a[i-1][j],a[i][j-1]);
            
        }
    }
    
    cout<<"length of palindromic subsequence:"<<a[x][x]<<"\n";
    
}
/*
--input--
1
13
GEEKSFORGEEKS
--output--
5
*/