/*
Question:
This question is asked by Apple. Given two binary strings (strings containing only 1s and 0s) return their sum (also as a binary string).
Note: neither binary string will contain leading 0s unless the string itself is 0

Ex: Given the following binary strings...

"100" + "1", return "101"
"11" + "1", return "100"
"1" + "0", return  "1"

https://leetcode.com/problems/add-binary/
*/

class Solution {
public:
    string addBinary(string a, string b) {
        int an=a.length();
        int bn=b.length();
        string result="";
        int carry=0;
        while(an>0 && bn>0){
            if(a[an-1]=='1' && b[bn-1]=='1'){
                if(carry==1)
                    result="1"+result;
                else
                    result="0"+result;
                carry=1;
                
            }
            else if(a[an-1]=='1' && b[bn-1]=='0' || a[an-1]=='0' && b[bn-1]=='1'){
                if(carry==1){
                    result="0"+result;
                    carry=1;
                }
                else{
                    result="1"+result;
                    carry=0;
                }
            }
            else if(a[an-1]=='0' && b[bn-1]=='0'){
                if(carry==1)
                    result="1"+result;
                else
                    result="0"+result;
                carry=0;
            }
            an-=1;
            bn-=1;
        }
        while(an>0){
            if(a[an-1]=='1'){
                if(carry==1){
                    result="0"+result;
                    carry=1;
                }
                else{
                    result="1"+result;
                    carry=0;
                }
            }
            else {
                if(carry==1){
                    result="1"+result;
                }
                else
                    result="0"+result;
                carry=0;
            }
            an-=1;
        }
        cout<<result<<" "<<bn<<"\n";
        while(bn>0){
            if(b[bn-1]=='1'){
                if(carry==1){
                    result="0"+result;
                    carry=1;
                }
                else{
                    result="1"+result;
                    carry=0;
                }
            }
            else {
                if(carry==1){
                    result="1"+result;
                }
                else
                    result="0"+result;
                carry=0;
            }
            bn-=1;
        }
        if(carry==1)
            result="1"+result;
        cout<<result;
        
        return result;
    }
};


/*
--input--
"100"
"110010"

--output--
"110110"
*/