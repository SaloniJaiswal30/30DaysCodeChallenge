
#include<bits/stdc++.h>
using namespace std;

class Solution {
public:
	vector<int>bfsOfGraph(int V, vector<int> adj[]){
	    int a[V]={0};
	    queue<int> q;
	    q.push(0);
	    
	    vector<int> v1;
	    while(!q.empty()){
	        int tmp=q.front();
	        a[tmp]=1;
	        v1.push_back(tmp);
	        q.pop();
	        for(int i=0;i<adj[tmp].size();i++){
	            if(a[adj[tmp][i]]==0){
	                q.push(adj[tmp][i]);
	                a[adj[tmp][i]]=1;
	            }
	        }
	    }
	    return v1;
	}
};

int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
    	cin >> V >> E;

    	vector<int> adj[V];

    	for(int i = 0; i < E; i++)
    	{
    		int u, v;
    		cin >> u >> v;
    		adj[u].push_back(v);
    	}
        Solution obj;
        vector<int>ans=obj.bfsOfGraph(V, adj);
        for(int i=0;i<ans.size();i++){
        	cout<<ans[i]<<" ";
        }
        cout<<endl;
	}
	return 0;
}  

/*
--input--
5 4
0 1 
0 2
0 3 
2 4
--ouput--
0 1 2 3 4 

*/