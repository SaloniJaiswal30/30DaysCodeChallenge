#include<bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node *right;
    Node *left;
   
    Node(int d){
        data=d;
        right=NULL;
        left=NULL;
    }
};
void func(Node *root){
    Node* n=root;
    queue<Node*> q1;
    q1.push(n);
    while(!q1.empty()){
        Node *tmp=q1.front();
        q1.pop();
        Node *swap;
        swap=tmp->left;
        tmp->left=tmp->right;
        tmp->right=swap;
        if(tmp->left)
            q1.push(tmp->left);
        if(tmp->right)
            q1.push(tmp->right);
    }
}

void Inorder(Node *root){
    if(root==NULL)
        return;
    Inorder(root->left);
    
    cout<<root->data<<" ";
    Inorder(root->right);
    
}
int main() {
	Node *root =new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
    root->right->left=new Node(6);
    root->right->right=new Node(7);
    root->left->left->left=new Node(8);
    root->left->left->right=new Node(9);
    Inorder(root);
    func(root);
    cout<<"\n";
    Inorder(root);
    return 0;
}

/*
--input--
			1
		2   	3
	  4   5	  6   7
	8   9
--output--
8 4 9 2 5 1 6 3 7 
7 3 6 1 5 2 9 4 8 

*/