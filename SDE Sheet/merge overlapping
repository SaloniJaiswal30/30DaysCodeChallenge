/*
Question:
Merge Overlapping Subintervals 

Practice Link:https://leetcode.com/problems/merge-intervals/
*/

#include<algorithm>
class Solution {
public:
    static bool sortcol(const vector<int>& a1,const vector<int>& b1){
        if(a1[0]<b1[0])
            return true;
        else if(a1[0]==b1[0]){
            if(a1[1]<b1[1])
                return true;
            return false;
        }
        return false;
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> v;
        sort(intervals.begin(), intervals.end(),sortcol);
        int strt=0,end=0;
        for(int i=1;i<intervals.size();i++){
            if(intervals[end][1]>=intervals[i][0]){
                if(intervals[end][1]>intervals[i][1]){
                    
                }
                else{
                    end=i;
                }
                
            }
            else{
                vector<int> v1;
                v1.push_back(intervals[strt][0]);
                v1.push_back(intervals[end][1]);
                
                v.push_back(v1);
                strt=i;
                end=i;
                
            }
        }
        vector<int> v1;
        v1.push_back(intervals[strt][0]);
        v1.push_back(intervals[end][1]);

        v.push_back(v1);
        return v;
    }
};

/*
--input--
[[1,3],[2,6],[8,10],[15,18]]

--output--
[[1,6],[8,10],[15,18]] 
*/