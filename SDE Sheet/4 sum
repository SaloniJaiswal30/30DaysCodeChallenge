/*
Question:
4 sum

Practice Link:https://leetcode.com/problems/4sum/
*/

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> v;
        if(nums.size()==0)
            return v;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int front=j+1;
                int back=n-1;
                int sum=target-nums[i]-nums[j];
                while(front<back){
                    int sum2=nums[front]+nums[back];
                    if(sum2<sum){
                       front++ ;
                    }
                    else if(sum2>sum){
                        back--;
                    }
                    else{
                        vector<int> v1(4,0);
                        v1[0]=nums[i];
                        v1[1]=nums[j];
                        v1[2]=nums[front];
                        v1[3]=nums[back];
                        v.push_back(v1);
                        while(front<back && v1[2]==nums[front])
                            front++;
                        while(front<back && v1[3]==nums[back])
                            back--;
                    }
                }
                while((j+1)<n && nums[j+1]==nums[j])
                            j++;    
            }
            while((i+1)<n && nums[i+1]==nums[i])
                            i++;
        }
        return v;
    }
};
/*
--input--
[1,0,-1,0,-2,2]
0

--output--
[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]
*/