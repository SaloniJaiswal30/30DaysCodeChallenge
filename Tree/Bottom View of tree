//#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

class Node{
    public:
    int data;
    Node *right;
    Node *left;
    Node(int d){
        data=d;
        right=NULL;
        left=NULL;
    }
};
vector <int> bottomView(Node *root)
{
   queue<pair<Node*,int>> q1;
   q1.push(make_pair(root,0));
   map<int,int> m1;
   vector<int> v1;
   while(!q1.empty()){
      Node *tmp=q1.front().first;
      int x=q1.front().second;
      q1.pop();
      m1[x]=tmp->data;
      if(tmp->left){
          int y=x-1;
          q1.push(make_pair(tmp->left,y));
      }
      if(tmp->right){
          int y=x+1;
          q1.push(make_pair(tmp->right,y));
      }
   }
   for(auto i=m1.begin();i!=m1.end();i++){
       v1.push_back(i->second);
   }
   return v1;
}
int main() {
	Node *root =new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
    root->right->left=new Node(6);
    root->right->right=new Node(7);
    root->left->left->left=new Node(8);
    root->left->left->right=new Node(9);
    vector<int> v2=bottomView(root);
    cout<<" Bottom view:";
    for(int i=0;i<v2.size();i++)
        cout<<v2[i]<<" ";
    return 0;
}

/*
--input--
           1
       2       3
    4    5  6    7
 8    9
       
--output--

Bottom view:8 4 9 6 3 7 

*/
