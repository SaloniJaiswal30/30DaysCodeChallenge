#include<bits/stdc++.h>
using namespace std;

vector<vector<int>> kClosest(vector<vector<int>>& points, int K) 
{
    vector<vector<int>> v1;
    priority_queue<pair<int,pair<int,int>>> pq;
    for(int i=0;i<points.size();i++){
        int dis=points[i][0]*points[i][0]+points[i][1]*points[i][1];
        pq.push(make_pair(dis,make_pair(points[i][0],points[i][1])));
        if(pq.size()>K)
            pq.pop();
    }
    while(!pq.empty()){
        vector<int> v;
        v.push_back(pq.top().second.first);
        v.push_back(pq.top().second.second);
        pq.pop();
        v1.push_back(v);
    }
    return v1;
}

int main()
{
    vector<vector<int>> points = { { 3, 3 },
                                   { 5, -1 },
                                   { -2, 4 } };
    vector<vector<int>> v=kClosest(points, 2);
    for(int i=0;i<v.size();i++)
        cout<<v[i][0]<<" "<<v[i][1]<<"\n";
    return 0;
}

/*
--output--
-2 4
3 3
*/
