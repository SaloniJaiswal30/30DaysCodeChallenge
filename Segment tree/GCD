//https://www.codechef.com/problems/GCDQ

#include<bits/stdc++.h>
using namespace std;
int gcd(int a, int b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}

void build(int arr[],int strt,int end,int seg[],int node){
    if(strt==end){
        seg[node]=arr[strt];
        return;
    }
    int mid=strt+((end-strt)/2);
    build(arr, strt, mid,seg,2*node);
    build(arr, mid+1, end,seg,2*node+1);
    seg[node]=gcd(seg[2*node],seg[2*node+1]);
}
int get_min(int x,int y,int strt,int end,int seg[],int node){
    if(x<=strt && end<=y){
        return seg[node];
    }
    else if(x>end || strt>y){
        return 0;
    }
   
    int mid=((end-strt)/2);
    return gcd(get_min(x,y,strt,mid,seg,2*node),get_min(x,y,mid+1,end,seg,2*node+1));
}
int main(){
    int t;
    cin>>t;
    for(int i=0;i<t;i++){
        int n,q;
        cin>>n>>q;
        int arr[n];
        int s[2*n];
        memset(s,1,sizeof(s));
        for(int j=0;j<n;j++){
            int tmp;
            cin>>tmp;
            arr[j]=tmp;
        }
        build(arr,0,n-1,s,1);
        for(int j=0;j<q;j++){
            int x,y;
            cin>>x>>y;
            x--;
            y--;
            int x1,y1;
            if(x==0){
                x1=y+1;
                y1=n-1;
                cout<<get_min(x1,y1,0,n-1,s,1)<<"\n";
            }
            else if(y==n-1){
                y1=x-1;
                x1=0;
                cout<<get_min(x1,y1,0,n-1,s,1)<<"\n";
            }
            else{
                y1=x-1;
                x1=0;
                int first=get_min(x1,y1,0,n-1,s,1);
                x1=y+1;
                y1=n-1;
                int second=get_min(x1,y1,0,n-1,s,1);
                cout<<gcd(first,second)<<"\n";
            }
        }
    }
    return 0;
}


/*
--input--
1
3 3
2 
6 
9
1 1
2 2
2 3
--output--
3
1
2
*/
