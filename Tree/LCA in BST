//#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

class Node{
    public:
    int data;
    Node *right;
    Node *left;
    Node(int d){
        data=d;
        right=NULL;
        left=NULL;
    }
};
Node* LCA(Node *root, int n1, int n2)
{
    while(root!=NULL){
        if(root->data<n1 && root->data<n2)
           root=root->right;
       
        else if( root->data>n1 && root->data>n2)
            root=root->left;
        else
            break;
    }
    return root;
}


int main() {
	Node *root =new Node(10);
    root->left=new Node(5);
    root->right=new Node(15);
    root->left->left=new Node(2);
    root->left->right=new Node(4);
    root->right->left=new Node(11);
    root->right->right=new Node(16);
    root->left->left->left=new Node(1);
    root->left->left->right=new Node(3);
    cout<<"LCA:"<<LCA(root,2,16)->data;
    
    return 0;
}

/*
--input--
           10
       5       15
    2    4  12    16
 1    3
       
--output--

LCA : 10

*/
