/*
Question:
This question is asked by Facebook. Given a linked list, containing unique values, reverse it, and return the result.

Ex: Given the following linked lists...

1->2->3->null, return a reference to the node that contains 3 which points to a list that looks like the following: 3->2->1->null
7->15->9->2->null, return a reference to the node that contains 2 which points to a list that looks like the following: 2->9->15->7->null
1->null, return a reference to the node that contains 1 which points to a list that looks like the following: 1->null

https://leetcode.com/problems/reverse-linked-list/
*/

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return head;
        
        ListNode* strt=head;
        ListNode* next1=head->next;
        ListNode* rev=NULL;
        
        while(strt!=NULL){
            strt->next=rev;
            rev=strt;
            strt=next1;
            if(next1!=NULL)
            next1=next1->next;
        }
        return rev;
    }
};


/*
--input--
[1,2,3,4,5]
--output--
[5,4,3,2,1]
*/