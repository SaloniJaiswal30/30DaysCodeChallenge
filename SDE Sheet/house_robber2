/*
Question:
House Robber 

Practice Link:https://leetcode.com/problems/house-robber-ii/
*/

class Solution {
public:
    int maxprofit(vector<int> nums){
        if(nums.size()==0)
            return 0;
        vector<int> a(nums.size());
        for(int i=0;i<nums.size();i++){
            if(i==0)
                a[0]=nums[0];
            else if(i==1)
                a[1]=max(nums[0],nums[1]);
            else{
                a[i]=max(a[i-2]+nums[i],a[i-1]);
            }
        }
        return a[nums.size()-1];
        
    }
    int rob(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        else if(nums.size()==1)
            return nums[0];
        else if(nums.size()==2)
            return max(nums[0],nums[1]);
        else 
            return max(maxprofit(vector<int>(nums.begin(),nums.end()-1)),
                       maxprofit(vector<int>(nums.begin()+1,nums.end())));
    }
};

/*
--input--
[2,3,2]

--output--
3
*/