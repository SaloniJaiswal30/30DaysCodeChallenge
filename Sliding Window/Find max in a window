
#include<bits/stdc++.h>
using namespace std;

vector<int> slidingMaximum(const vector<int> &A, int B) {
    vector<int> v;
    vector<int> res;
    int j=0;
    if(B>A.size())
    {
        res.push_back(*max_element(A.begin(),A.end()));
        return res;
    }
    for(int i=0;i<A.size();i++){
        while(!v.empty() && v.back()<A[i]){
            v.erase(v.begin()+v.size()-1);
        }
        v.push_back(A[i]);
        if((i+1)>=B){
            res.push_back(v[0]);
            if(!v.empty() && A[j]==v[0])
                v.erase(v.begin());
            j++;
        }
    }
    for(int i=0;i<res.size();i++){
        cout<<res[i]<<" ";
    }
    return res;
}

int main()
{
    /// With negative odd numbers.
    vector<int> v;
    int n;
    cin>>n;
    for (int i=0; i<n; i++){
        int t;
        cin>>t;
        v.push_back(t);
    }
    int k;
    cin>>k;
    slidingMaximum(v,k);
    return 0;
}


/*
--input--
8
1 3 -1 -3 5 3 6 7
3
--output--
3 3 5 5 6 7 
*/
