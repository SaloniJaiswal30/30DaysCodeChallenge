
#include <bits/stdc++.h>
using namespace std;

class Solution{
public:
    int subset(int n,int arr[],int sum){
        int subsum[n+1][sum+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<sum+1;j++){
                if(i==0)
                    subsum[i][j]=0;
                if(j==0)
                    subsum[i][j]=1; 
            }
        }
        for( int i=1;i<n+1;i++){
            for( int j=1;j<sum+1;j++){
                if(arr[i-1]<=j){
                    subsum[i][j]=max(subsum[i-1][j-arr[i-1]], subsum[i-1][j]);
                }
                else
                    subsum[i][j]=subsum[i-1][j];
            }
        }
        return subsum[n][sum];
    }
    int equalPartition(int N, int arr[])
    {
        int sum=0;
        for(int i=0;i<N;i++){
            sum=sum+arr[i];
        }
        
        if(sum%2==0 && N!=1){
            return subset(N,arr,sum/2);
        }
        else
            return 0;
    }
};

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
} 


/*
--input--
3
10 2 8
--output--
YES
*/
