#include<bits/stdc++.h>
using namespace std;

int knapSack(int W, int wt[], int val[], int n) 
{ 
    int arr[n+1][W+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<W+1;j++){
            if(i==0 ||j==0)
                arr[i][j]=0;
        }
    }
    int i,j;
    for( i=1;i<n+1;i++){
        for( j=1;j<W+1;j++){
            if(wt[i-1]<=j){
                arr[i][j]=max(val[i-1]+arr[i-1][j-wt[i-1]],arr[i-1][j]);
            }
            else
                arr[i][j]=arr[i-1][j];
        }
    }
    return arr[n][W];
}

int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n, w;
        cin>>n>>w;
        
        int val[n];
        int wt[n];
        
        //inserting the values
        for(int i=0;i<n;i++)
            cin>>val[i];
        
        //inserting the weights
        for(int i=0;i<n;i++)
            cin>>wt[i];
        
        //calling method knapSack()
        cout<<knapSack(w, wt, val, n)<<endl;
        
    }
	return 0;
}  

/*
--input--
N = 3
W = 4
values[] = {1,2,3}
weight[] = {4,5,1}

--output--
3
*/
