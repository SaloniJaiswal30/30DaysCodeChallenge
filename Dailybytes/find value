/*
Question:
This question is asked by Google. Given the reference to the root of a binary search tree and a search value, return the reference to the node that contains 
the value if it exists and null otherwise.
Note: all values in the binary search tree will be unique.

Ex: Given the tree...

        3
       / \
      1   4
and the search value 1 return a reference to the node containing 1.
Ex: Given the tree

        7
       / \
      5   9
         / \ 
        8   10
and the search value 9 return a reference to the node containing 9.
Ex: Given the tree

        8
       / \
      6   9
and the search value 7 return null.

*/

class Solution {
public:
    TreeNode* ans=NULL;
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root==NULL)
            return NULL;
        if(root->val==val)
            ans=root;
        searchBST(root->left,val);
        searchBST(root->right,val);
        return ans;
        
    }
};

/*
--input--
[4,2,7,1,3]
2

--output--
[2,1,3]
*/