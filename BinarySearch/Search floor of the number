// C++ program to find size of an array by using a  
// pointer hack. 
#include <bits/stdc++.h> 
using namespace std; 

long long binarySearch(int arr[],long long l, long long r, long long s){
    if(l>r || s<arr[0])
        return -1;
    long long mid=l+((r-l)/2);
    if(arr[mid]==s){
        return mid;
    }
    else if(mid-1>=l && arr[mid-1]<s && arr[mid]>s){
        return mid-1;
    }
    else if(arr[mid]<s && mid+1<=r && arr[mid+1]>s){
        return mid;
    }
    else if(arr[mid]>s)
        binarySearch(arr,l,mid-1,s);
    else
        binarySearch(arr,mid+1,r,s);
}
int findFloor(int v[], long long n, long long x){
    if(x>v[n-1])
        return n-1;
    return binarySearch(v,0,n-1,x);

}
int main() 
{ 
    int  arr[] = {50, 52, 55, 60, 61, 62,63, 64, 68, 70, 72, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 ,110 ,111 ,112 ,113 ,114, 115 ,116, 117, 118 ,119, 120, 121 ,122 ,123 ,124, 125, 126 ,127 ,128 ,129 ,130}; 
    cout<<"index of element : "<<findFloor(arr,63,106)<<"\n";
    cout<<"index of element : "<<findFloor(arr,63,77);
    return 0; 
} 

/*
--output--

Copy
index of element : 40
index of element : 11

*/
