/*
Question:
House Robber 

Practice Link:https://leetcode.com/problems/house-robber-iii/
*/

class Solution {
public:
    unordered_map<TreeNode* ,int> m;
    int rob(TreeNode* root) {
        if(root==NULL)
            return 0;
        if(m.count(root))
            return m[root];
        int total=0;
        if(root->left!=NULL)
           total+=rob(root->left->left)+rob(root->left->right);
        if(root->right!=NULL)
           total+=rob(root->right->left)+rob(root->right->right);
         return m[root]=max(root->val+total,rob(root->left)+rob(root->right));
    }
};

/*
--input--
[3,2,3,null,3,null,1]

--output--
7
*/